{
  "extends": [
    "react-app",
    "react-app/jest",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "plugins": ["prettier", "@typescript-eslint"],
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": ".",
    "sourceType": "module"
  },
  "rules": {
    "no-console": "warn",
    "no-alert": "warn",
    "no-restricted-globals": [
      "warn",
      {
        "name": "window",
        "message": "Avoid using window object directly to manipulate frames."
      }
    ],
    "no-new-object": "warn",
    "no-new-func": "warn",
    "no-eval": "error",
    "eqeqeq": ["warn", "always"],
    "curly": ["warn", "all"],
    "no-var": "warn",
    "prefer-const": "warn",
    "no-restricted-imports": [
      "warn",
      {
        "patterns": ["./*", "../*"]
      }
    ],
    "getter-return": ["error", { "allowImplicit": true }],
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-inferrable-types": "warn",
    "@typescript-eslint/ban-ts-comment": "warn",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": ["variableLike", "classProperty", "function"],
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": ["variable"],
        "modifiers": ["const"],
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": ["classProperty"],
        "modifiers": ["static"],
        "format": ["UPPER_CASE"]
      },
      {
        "selector": ["typeLike"],
        "format": ["PascalCase"],
        "custom": {
          "regex": "^((?!Type$).)*$",
          "match": true
        }
      }
    ],
    "@typescript-eslint/array-type": [
      "warn",
      {
        "default": "generic"
      }
    ],
    "@typescript-eslint/return-await": ["error", "in-try-catch"],
    "no-return-await": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "TSEnumDeclaration",
        "message": "The use of \"enum\" is forbidden. Instead, use \"as const\" with objects: const Variable = {} as const;"
      }
    ],
    "prettier/prettier": "error"
  }
}
